name: Run kurobako benchmark
on:
  pull_request:
    paths:
    - '.github/workflows/benchmarks.yml'
    - 'cmaes/**.py'
    - 'benchmark/*.py'
    - 'benchmark/runner.sh'
    - 'requirements-bench.txt'
jobs:
  benchmark-six-hump-camel:
    name: Run kurobako benchmark
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          architecture: 'x64'
      - run: pip install -U pip setuptools
      - run: python setup.py develop
      - run: pip install --progress-bar off -r requirements-bench.txt
      - run: pip install --progress-bar off -U git+https://github.com/c-bata/kurobako-py.git@fix-log-completed-trials
      - run: pip install --progress-bar off -U git+https://github.com/optuna/optuna.git
      - name: Cache kurobako CLI
        id: cache-kurobako
        uses: actions/cache@v2
        with:
          path: ./kurobako
          key: kurobako-0-2-9
      - name: Download kurobako CLI
        if: steps.cache-kurobako.outputs.cache-hit != 'true'
        run: |
          curl -L https://github.com/sile/kurobako/releases/download/0.2.9/kurobako-0.2.9.linux-amd64 -o kurobako
          chmod +x kurobako
          ./kurobako -h

      - name: Run benchmark of Six-Hump Camel function
        env:
          KUROBAKO: ./kurobako
        run: ./benchmark/runner.sh six-hump-camel ./kurobako-report.json
      - name: Plot kurobako result
        uses: c-bata/github-actions-kurobako/plot@v3
        id: kurobako-plot
        with:
          report-json-path: './kurobako-report.json'
      - name: Generate kurobako markdown report
        run: cat ./kurobako-report.json | ./kurobako report > ./kurobako-report.md

      - name: Set HAS_SECRET flag
        env:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
        run: |
          if [ ! -z $GCP_PROJECT_ID ] && [ ! -z $GCP_SA_KEY ]; then
              echo "HAS_SECRET=1" >> $GITHUB_ENV
          else
              echo "HAS_SECRET=0" >> $GITHUB_ENV
          fi
      - uses: 'google-github-actions/auth@v0'
        if: ${{ env.HAS_SECRET == 1 }}
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v0'
      - run: gcloud info
        if: ${{ env.HAS_SECRET == 1 }}
      - run: gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
        if: ${{ env.HAS_SECRET == 1 }}
      - run: gsutil cp ${{ steps.kurobako-plot.outputs.image-path }} gs://kurobako-reports/${{ github.repository }}/six-hump-camel-${{ github.sha }}.png
        if: ${{ env.HAS_SECRET == 1 }}
      - name: Comment to a pull request
        if: ${{ env.HAS_SECRET == 1 }}
        uses: c-bata/github-actions-kurobako@master
        with:
          report-md-path: './kurobako-report.md'
          public-image-url: https://storage.googleapis.com/kurobako-reports/${{ github.repository }}/six-hump-camel-${{ github.sha }}.png
          title: 'Benchmark of Six-Hump Camel function'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - run: mv ./kurobako-report.json ./kurobako-report-six-hump-camel.json
      - uses: actions/upload-artifact@v2
        with:
          name: kurobako-report
          path: kurobako-report-six-hump-camel.json

      - run: mv ${{ steps.kurobako-plot.outputs.image-path }} six-hump-camel.png
        if: ${{ env.HAS_SECRET == 0 }}
      - run: mv ./kurobako-report.md ./kurobako-report-six-hump-camel.md
        if: ${{ env.HAS_SECRET == 0 }}
      - uses: actions/upload-artifact@v2
        if: ${{ env.HAS_SECRET == 0 }}
        with:
          name: kurobako-report
          path: six-hump-camel.png
      - uses: actions/upload-artifact@v2
        if: ${{ env.HAS_SECRET == 0 }}
        with:
          name: kurobako-report
          path: kurobako-report-six-hump-camel.md

  benchmark-rastrigin:
    name: Run kurobako benchmark
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          architecture: 'x64'
      - run: pip install -U pip setuptools
      - run: python setup.py develop
      - run: pip install --progress-bar off -r requirements-bench.txt
      - run: pip install --progress-bar off -U git+https://github.com/c-bata/kurobako-py.git@fix-log-completed-trials
      - run: pip install --progress-bar off -U git+https://github.com/optuna/optuna.git
      - name: Cache kurobako CLI
        id: cache-kurobako
        uses: actions/cache@v2
        with:
          path: ./kurobako
          key: kurobako-0-2-9
      - name: Download kurobako CLI
        if: steps.cache-kurobako.outputs.cache-hit != 'true'
        run: |
          curl -L https://github.com/sile/kurobako/releases/download/0.2.9/kurobako-0.2.9.linux-amd64 -o kurobako
          chmod +x kurobako
          ./kurobako -h

      - name: Run benchmark of Rastrigin function
        env:
          KUROBAKO: ./kurobako
          DIM: 2
          REPEATS: 10
          BUDGET: 2500
        run: ./benchmark/runner.sh rastrigin ./kurobako-report.json
      - name: Plot kurobako result
        uses: c-bata/github-actions-kurobako/plot@v3
        id: kurobako-plot
        with:
          report-json-path: './kurobako-report.json'
      - name: Generate kurobako markdown report
        run: cat ./kurobako-report.json | ./kurobako report > ./kurobako-report.md

      - name: Set HAS_SECRET flag
        env:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
        run: |
          if [ ! -z $GCP_PROJECT_ID ] && [ ! -z $GCP_SA_KEY ]; then
              echo "HAS_SECRET=1" >> $GITHUB_ENV
          else
              echo "HAS_SECRET=0" >> $GITHUB_ENV
          fi
      - uses: 'google-github-actions/auth@v0'
        if: ${{ env.HAS_SECRET == 1 }}
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v0'
      - run: gcloud info
        if: ${{ env.HAS_SECRET == 1 }}
      - run: gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
        if: ${{ env.HAS_SECRET == 1 }}
      - run: gsutil cp ${{ steps.kurobako-plot.outputs.image-path }} gs://kurobako-reports/${{ github.repository }}/rastrigin-${{ github.sha }}.png
        if: ${{ env.HAS_SECRET == 1 }}
      - name: Comment to a pull request
        if: ${{ env.HAS_SECRET == 1 }}
        uses: c-bata/github-actions-kurobako@master
        with:
          report-md-path: './kurobako-report.md'
          public-image-url: https://storage.googleapis.com/kurobako-reports/${{ github.repository }}/rastrigin-${{ github.sha }}.png
          title: 'Benchmark of Rastrigin function'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - run: mv ./kurobako-report.json ./kurobako-report-rastrigin.json
      - uses: actions/upload-artifact@v2
        with:
          name: kurobako-report
          path: kurobako-report-rastrigin.json

      - run: mv ${{ steps.kurobako-plot.outputs.image-path }} rastrigin.png
        if: ${{ env.HAS_SECRET == 0 }}
      - run: mv ./kurobako-report.md ./kurobako-report-rastrigin.md
        if: ${{ env.HAS_SECRET == 0 }}
      - uses: actions/upload-artifact@v2
        if: ${{ env.HAS_SECRET == 0 }}
        with:
          name: kurobako-report
          path: rastrigin.png
      - uses: actions/upload-artifact@v2
        if: ${{ env.HAS_SECRET == 0 }}
        with:
          name: kurobako-report
          path: kurobako-report-rastrigin.md

  benchmark-toxic-warm-start:
    name: Run kurobako benchmark
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          architecture: 'x64'
      - run: pip install -U pip setuptools
      - run: python setup.py develop
      - run: pip install --progress-bar off -r requirements-bench.txt
      - run: pip install --progress-bar off -U git+https://github.com/c-bata/kurobako-py.git@fix-log-completed-trials
      - run: pip install --progress-bar off -U git+https://github.com/optuna/optuna.git
      - name: Cache kurobako CLI
        id: cache-kurobako
        uses: actions/cache@v2
        with:
          path: ./kurobako
          key: kurobako-0-2-9
      - name: Download kurobako CLI
        if: steps.cache-kurobako.outputs.cache-hit != 'true'
        run: |
          curl -L https://github.com/sile/kurobako/releases/download/0.2.9/kurobako-0.2.9.linux-amd64 -o kurobako
          chmod +x kurobako
          ./kurobako -h

      - name: Cache surrogate model of tuning lightgbm for Toxic Data Challenge
        id: cache-toxic-surrogate
        uses: actions/cache@v2
        with:
          path: ./toxic-lightgbm-warm-start.zip
          key: toxic-lightgbm-warm-start-zip
      - name: Download toxic-dataset
        if: steps.cache-toxic-surrogate.outputs.cache-hit != 'true'
        run: curl -L https://storage.googleapis.com/hpo-bench/kurobako-surrogate/toxic-lightgbm-warm-start.zip -o toxic-lightgbm-warm-start.zip
      - name: Unarchive toxic-dataset
        run: unzip ./toxic-lightgbm-warm-start.zip

      - name: Run kurobako for Warm Starting CMA-ES
        env:
          KUROBAKO: ./kurobako
          SURROGATE_ROOT: ./toxic-lightgbm-warm-start
          WARM_START: 100
          REPEATS: 12
          BUDGET: 30
        run: ./benchmark/runner.sh toxic-lightgbm ./kurobako-report.json
      - name: Plot kurobako result
        uses: c-bata/github-actions-kurobako/plot@v3
        id: kurobako-plot
        with:
          report-json-path: './kurobako-report.json'
          error-bar: 'true'
      - name: Generate kurobako markdown report
        run: cat ./kurobako-report.json | ./kurobako report > ./kurobako-report.md

      - name: Set HAS_SECRET flag
        env:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
        run: |
          if [ ! -z $GCP_PROJECT_ID ] && [ ! -z $GCP_SA_KEY ]; then
              echo "HAS_SECRET=1" >> $GITHUB_ENV
          else
              echo "HAS_SECRET=0" >> $GITHUB_ENV
          fi
      - uses: 'google-github-actions/auth@v0'
        if: ${{ env.HAS_SECRET == 1 }}
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v0'
      - run: gcloud info
        if: ${{ env.HAS_SECRET == 1 }}
      - run: gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
        if: ${{ env.HAS_SECRET == 1 }}
      - run: gsutil cp ${{ steps.kurobako-plot.outputs.image-path }} gs://kurobako-reports/${{ github.repository }}/toxic-lightgbm-${{ github.sha }}.png
        if: ${{ env.HAS_SECRET == 1 }}
      - name: Comment to a pull request
        if: ${{ env.HAS_SECRET == 1 }}
        uses: c-bata/github-actions-kurobako@master
        with:
          report-md-path: './kurobako-report.md'
          public-image-url: https://storage.googleapis.com/kurobako-reports/${{ github.repository }}/toxic-lightgbm-${{ github.sha }}.png
          title: 'Tuning LightGBM for Kaggle Toxic Challenge (Surrogate)'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - run: mv ./kurobako-report.json ./kurobako-report-toxic-lightgbm.json
      - uses: actions/upload-artifact@v2
        with:
          name: kurobako-report
          path: kurobako-report-toxic-lightgbm.json

      - run: mv ${{ steps.kurobako-plot.outputs.image-path }} toxic-lightgbm.png
        if: ${{ env.HAS_SECRET == 0 }}
      - run: mv ./kurobako-report.md ./kurobako-report-toxic-lightgbm.md
        if: ${{ env.HAS_SECRET == 0 }}
      - uses: actions/upload-artifact@v2
        if: ${{ env.HAS_SECRET == 0 }}
        with:
          name: kurobako-report
          path: toxic-lightgbm.png
      - uses: actions/upload-artifact@v2
        if: ${{ env.HAS_SECRET == 0 }}
        with:
          name: kurobako-report
          path: kurobako-report-toxic-lightgbm.md
